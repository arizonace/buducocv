Start,End,StartPrec,EndPrec,Tenure,Name,Label,Position,URL,Address,Phone,Company,Transitions,Organization,Responsibilities,Languages,Platforms,Source Control,Applications,Methodologies,Did,Activities,highlightsHTML
2013-06-17,2016-06-01,D,M,,Bloomberg,Bloomberg,Senior Software Engineer,http://bloomberg.com,"731 Lexington Ave, New York, NY 10022",+1-212-318-2000,Bloomberg LP is an international financial information services and news gathering company. Data License is a $750M/yr enterprise platform that delivers collated Bloomberg data to enterprise clients as files. The BVAL Team specializes in fixed-income securities and regulatory data within Data License.,,"BVAL Team, Data License Department, Enterprise Solutions.","Design, implement, and support enterprise data solutions regarding fixed income securities.","C++, Python, SQL, Fortran, JavaScript, ksh, bash, Excel, Hypersheet, XML. ","AIX, Solaris, Linux, Atlassian Jira, Atlassian Confluence, Bloomberg proprietary","git, RCS, Bloomberg proprietary, Phabricator ","Microsoft Office (Word, Excel, Visio), Exceed On Demand, Bloomberg Terminal.","Agile/SCRUM, Waterfall.","Developed enterprise data delivery solutions concerning fixed income securities in C++, Python, SQL, etc.","I designed, implemented, and supported enterprise data solutions regarding fixed income securities. I programmed mostly in and for the Unix command line environment, primarily in C++, SQL and Python, along with Fortran, JavaScript, shell languages and many Bloomberg proprietary technologies. I did user interface development, working on several screens in the Bloomberg Terminal, including customer facing screens. Senior Engineers at Bloomberg are expected to be or become competent in any language or technology necessary for all aspects of their projects. I was substantially involved in and responsible for database design and programming, feasibility and technical reviews, coding, all stages of testing, documentation, sign off if required for UX/security/compliance, phased rollout, configuration, and ultimately support. At times I was also in rotation as a support on-call, with the possibility of being somewhat always on-call in exigent circumstances, or if the scheduled on-call was not reachable.","<p class=""highlights"">Highlights:</p>
<ul>
  <li>I developed and enhanced several applications to collect data about financial instruments (securities) from various instantaneous pricing sources both internal and external to Bloomberg and collate them into files that are delivered to clients.</li>
  <ul>
    <li>The data gathering and delivery systems on which I worked, consisted of many instances of many interoperating bits of software, across distributed systems. Market driven changes in our product constantly required new applications as well as enhancements to existing ones.</li>
    <li>I worked under the implicit requirement for space and time efficiency. Bloomberg data files are typically very large, often containing several hundred fields and potentially millions of rows.</li>
  </ul>
  <li>I developed and enhanced parts of the “snap-shot” infrastructure that captures market data as of certain critical moments, particularly closing times for major market centers around the world including New York, London, Tokyo, and Australia.</li>
  <ul>
    <li>The infrastructure maintains a pipeline of customer requests respecting enforced delays, time embargoes, customer entitlements, customer portfolios, and customer preferences.</li>
    <li>I also developed and enhanced some of the software to monitor the workflow from customer request to customer retrieval.</li>
  </ul>
  <li>I developed and enhanced applications to perform quality control of our data, including day-over-day differential checks, and formatting checks.</li>
  <li>I was the principal software engineer on the project to migrate the product we deliver to the Philadelphia Federal Reserve from an older custom infrastructure into the main Data License infrastructure.</li>
  <ul>
    <li>Quality control for this project included format and value comparison of a wide spectra of fields for millions of securities without any metadata. I was able to validate the contents of each field against information derived from the whole file.</li>
    <li>I was also the principal software engineer in projects to provide the Fed with sample data to answer RFPs for new products under my team’s responsibility.</li>
  </ul>
  <li>I was one of the key developers on a project migrating several classes of mortgage securities from Bloomberg Generic pricing (BGN) to the more accurate Bloomberg Valuation (BVAL) pricing.</li>
  <li>I developed functionality to configure and manage customer entitlement to orthogonal categories of both securities and fields. Data gathering programs needed very efficient access to customer entitlement and usage for every piece of data written to a file. Field entitlements vary from one security to the next</li>
</ul>"
2012-04-09,2013-05-31,D,D,,GTRI,Georgia Tech Research Institute (GTRI),Contract Programmer,http://gtri.gatech.edu,"400 10th St NW, Atlanta, GA 30318",+1-404-894-7325,Georgia Tech Research Institute (GTRI) is a leading research institute with international presence providing solutions for government and industry. ,,"Electronic Systems Laboratory (ELSYS), http://www.gtri.gatech.edu/elsys",Develop and enhance software to simulate and test airborne-survivability missile-defense systems. Direct and mentor student interns.,"C++, C++/CLI (Managed C++), Python, C#, C","MFC, Arduino",MKS Integrity (now PTC Integrity),,,"Developed software to test aircraft missile defense systems using MILSTD1553 in C++, C# and Python.","I was a key implementer of several successful electronic warfare projects primarily using C++ (regular and CLI), Python, and C#, the revenue for which was in the tens of millions of dollars. I directed and coached the two student interns on my project, and indirectly provided additional mentoring to other student interns. I conceived of and successfully implemented a small hardware project with integrated circuits (ICs) and electronic components.
","<p class=""highlights"">Highlights:</p>
<ul>
  <li>I developed and enhanced applications to monitor and control communications between devices over a MILSTD1553 serial interface and display real-time visualizations of the traffic. </li>
  <ul>
    <li>My object-oriented data model allowed very flexible design and implementation of multiple views of the protocol analysis of each type of packet, ranging from visual depictions of elements in the aircraft dashboard, down to raw data, all the way down to individual bits.</li>
    <li>I used code structure, self documenting code, and the .Net reflection capabilities of Managed C++ to extract metadata about the meanings of bits and bit sets so that even in hexadecimal and binary raw data views, I show tooltips with interpretive information when the mouse hovers over data.</li>
    <li>When communicating with devices on the serial bus, the program can act as bus master or slave, it can emulate the aircraft control system, it can capture traffic, it can playback one side of a captured conversation and monitor/capture the other, and it can control playback of PIR and RADAR sensor data captured during real events in real aircraft.</li>
    <li>I developed and enhanced software to control a PCI card that can capture multi-channel PIR data from the system’s optical sensors and can playback recorded sequences to the central processor during testing. This software communicates with the card using PCI FIFO channels mapped to virtual memory addresses.</li>
  </ul>
  <li>I designed and developed an AN/APR-39 (Radar Warning System) simulator that could communicate with a physical AN/AAR-47 (Laser Warning System) and emulate and test the protocols for startup, version detection, and control/display integration for aircraft with both systems.</li>
  <li>I designed, prototyped, and programmed an electronic device on a powered breadboard in a nicely enclosed package with RS485 over USB connectivity and external power. The Arduino based device controlled several relays and switches including a cascading relay control of the 24VDC 3.5A main power to the test rack. I was assisted in this project by my own interns and an electrical engineering intern. This allowed the software to control the physical configuration of the test rack, reducing human intervention, improving reliability, and enabling long-running overnight test suites.</li>
  <li>I Developed auxiliary servers and libraries using C++ and C# along with Python interface classes so the binary applications could interoperate with Python in the test framework.</li>
</ul>"
2009-05-11,2012-03-28,D,D,,Alcatel-Lucent,Alcatel-Lucent,Software Architect/Solution Line Manager,http://alcatel-lucent.com,"800 North Pointe Pkwy, Alpharetta, GA 30005",+1-770-750-2339,"Alcatel-Lucent is a global telecommunications corporation with a strong presence in the global IPTV (broadcast television based on IP technology) industry. Our customers included some of the largest IPTV broadcasters in the world including AT&T, SingTel and Portugal Telecom.",Alcatel-Lucent merged with Nokia in Jan 2016.,"Multimedia Integration Division, IPTV Application Architecture","Design, prototype, develop, demo, certify, and deploy IPTV integration software and interactive multimedia software for Telcos and utility companies seeking to provide and enhance IPTV television and mobile services using Microsoft Mediaroom.  ","C#, Mediaroom Markup Language (MRML), SQL, Java, others.","ASP.Net, Presentation Framework (PF), Android, SQL Server",Subversion (SVN),,,"Implemented software solutions for IPTV television and telephone service providers using C#, SQL, Java, etc.","I performed a broad range of software development activities including software architecture, visual design, coding, prototyping, technology evaluation, business development, demos, trade shows, training, acceptance testing, and deployment. I coded primarily in C# and Dot Net but also did web, JavaScript, Java, and database programming. I primarily developed code targeted at the television-connected, interactive set-top-box which the user controls via handheld remote. I also developed code for other targets in the integrated platform including IPTV back end servers in the VHO, web servers inside and outside the VHO, and Android. Products included Caller ID and Call Handling, Voicemail, Remote DVR, Mobile-RDVR, Instant Messaging, Weather, Fitness Instruction, Movie listings, Yellow Pages, Facebook, Pandora, Flickr, casual games and others.","<p class=""highlights"">Highlights:</p>
<ul>
  <li>Domestic and International Travel. I travelled to Poland, India, Singapore, England and to many cities in the United States for trade shows and to meet with customers, partners and other business units to perform a variety of software lifecycle activities.</li>
  <li>Software Prototyping and Pre-Sales support. I created several software prototypes and proofs of concept for the set-top-box including a Pandora client using REST and OAuth, an app to browse movies at nearby cinemas, and an Instant Messaging client.</li>
  <li>I created an Android application to showcase our RDVR, VOD, EPG, video playback and Mediaroom integration at trade shows and client visits.</li>
  <li>I was a key developer in the architecture and development of one our flagship products which was a mediation layer that among other things, allowed a single Mediaroom instance to be partitioned among multiple service providers via web services using federated authentication along with comprehensive web method authorization.</li>
  <li>I created an website in ASP.Net to demonstrate the ability to securely log in as one of several different broadcasters and separately manage media, subscribers, channel lineup etc. The website provided fully journaled and audited role-based management of the underlying Mediaroom instance.</li>
  <li>Development Team Liaison. Most of our development took place outside the USA in distant time zones (primarily Poland and India, and some in England). I acted as a local liaison to the development teams for local managers, customers and deployment teams.</li>
  <li>I maintained a Mediaroom lab in which I kept recent versions of the software and operating systems in use so I could quickly test reported customer bugs and deployment problems and relay information to the developers and other deployment teams.</li>
  <li>Deployment. I travelled to customer sites to work directly inside their VHOs (Video Head-end Offices), labs and data centers and with their engineers to deploy our software products.</li>
  <ul>
    <li>I installed and configured Windows Server 2008, Windows Server 2008 R2 and Linux on rack servers, blade servers and VMs. I installed and configured SANs, Multi-Path I/O, Database clusters, Windows clusters, Windows domains, Mediaroom servers, and custom software in various network architectures.</li>
  </ul>
</ul>"
2007-01-15,2008-12-31,D,D,,AT&T,AT&T,Contract Programmer,http://att.com," 725 W Peachtree St NW, Atlanta, GA  30308", +1-800-331-0500,"AT&T, a Fortune 500 company with a strong history in communications and broadcasting, performed the first long-distance television transmission in 1927.",,"AT&T Labs, Video and Converged Services, Exploratory Application Development",Prototype and develop IPTV multimedia software for the U-Verse platform.  ,"C#, Mediaroom Markup Language (MRML), JavaScript, SQL, C++","ASP.Net, Oracle, DirectShow",Subversion (SVN),,,"Developed interactive IPTV software for the U-Verse platform in C#, JavaScript, and SQL.","I developed and enhanced prototypes of on-screen, customer-facing, interactive IPTV applications that run directly on the Set-Top-Box. Technologies used include C#, ASP.NET, Oracle, SQL, JavaScript, C++, DirectShow, and the Windows Media SDKs.","<p class=""highlights"">Highlights:</p>
<ul>
  <li>I developed the Preferences section of the U-Verse application, including the database design, database programming, and capacity planning. This section of the application stores the user’s home city, favorite cities, and other user specific preferences. I used C#, ASP.Net, Oracle, PL/SQL, and JavaScript with Ajax.</li>
  <li>As part of a team, I collaborated closely with our information architects and other developers to create solutions that address the challenges of television applications. The key difficulties we mitigated were:</li>
  <ul>
    <li>Entering text and navigating a UI with a hand-held remote.</li>
    <li>Visual display elements that looked acceptable on a wide variety of display technologies and qualities.</li>
    <li>The user’s implicit expectation of the same level of reliability from integrated apps as their television service, much higher than expected from Internet service, or SmartTV apps.</li>
  </ul>
</ul>"
2006-01-01,2006-03-01,M,M,remote/part-time,Agile,Agile Technologies LLC,Contract Programmer,http://www.agiletech.com,"400 Perimeter Center Terrace Ste 145, Atlanta, GA 30346",+1-678-579-9068,Agile Technologies (now Majesco) http://www.majesco.com provides consulting and application development services to clients. I sub contracted to develop a time and materials project due to my availability and expertise in the technology.,,,"Develop an Active-X control for Greyhound PackageXpress, for Greyhound Lines Inc.","C++, JavaScript, HTML","Windows 98, Visual Studio 6, IE6",Subversion,,,Developed an Active-X control for Greyhound PackageXpress in C++,"Greyhound PackageXpress allows retail customers to ship packages via Greyhound bus lines. Agile developed a J2EE web application to allow ticket agents to accept packages and charge customers for shipment. The ticket agents used workstations attached to a luggage scale, a receipt printer, a regular printer, and a debit card PIN pad, along with other peripherals. My job was to write an Active-X control to allow the web application to communicate with the luggage scale via the parallel port and the debit PIN pad over the serial port.
The project was an exercise in retrograde and unsupported environments; asynchronous serial and parallel port communications; multi-threaded, semi-persistent COM objects; HTML; and JavaScript. ","<p class=""highlights"">Challenges overcome for this project include:</p>
<ul>
  <li>A retrograde and unsupported hardware environment. Due to external limitations, the platform was restricted to IE6 on Windows 98 on older computers, with older UARTs. Active-X was the only feasible client side technology available.</li>
  <li>A retrograde and unsupported development environment. Due to additional limitations, the control could not be pre-installed and had to be configured to auto-install on demand over-the-web with limited user interaction. I developed the control as a single, signed, self-registering, Active-X DLL. The HTML host wrapper declared it via CLSID/GUID with a codebase URL for auto-installation. A signature from a trusted authority allowed for minimally intrusive self installation.</li>
  <li>The luggage scale’s parallel port protocol was asynchronous and extemporaneous. The scale had a non-negligible bounce during which time it continued reporting weight values over the parallel port. I had to make my own determination of the stable weight. The weight displayed on the page was updated but not reported to the backend until it had stabilized. Of course the user could meanwhile be interacting with the page in any way.</li>
  <li>IE6 hosts Active-X controls strictly in a single-threaded-apartment (STA) where the context and lifetime are tied to the webpage. The control needed to create and manage separate multi-threaded-apartments to create the multiple threads needed to maintain semi-persistent asynchronous communications with the parallel port. The control had to manage its own serialization and synchronization with the main STA, which was tricky because Windows/IE6 has its own separate mechanism for serializing the control’s STA.</li>
  <li>Communicating with the PIN pad was synchronous and more reliable, but navigating the handshaking and security protocols was more complex and time consuming. Testing was limited to a fixed set of predetermined interactions supported by the pad in test mode.</li>
</ul>
<p>I developed the documentation describing the control’s properties, methods and events in HTML using JavaScript to implement a collapsible outline.</p>"
2005-01-03,2006-08-17,D,D,,NextGen,NextGen Healthcare Information Systems,Consultant,http://nextgen.com,"3340 Peachtree Road NE, Suite 2700, Atlanta, GA 30326",+1-404-467-1500,"NextGen is a Microsoft Gold Partner in the Healthcare industry that develops Electronic Medical Records (EMR) and Enterprise Practice Management (EPM) software for health providers and health agencies.
NextGen Consulting Services provides customer specific solutions in data migration, report generation and workflow automation.",,NextGen Consulting Services,"Design and develop custom solutions for healthcare industry clients, primarily in the areas of data migration and regulation compliance. Maintain HIPAA compliancy.","C#, VB.Net, SQL, XML, HL7, Microsoft VBA, Excel, Access, others.","SQL Server, MSMQ, Microsoft Office, Crystal Reports, Infragistics",Visual Source Safe,,,"Implemented regulatory and migration solutions for healthcare providers in C#, SQL, Excel, etc.","I developed custom solutions to help several new customers convert their health care and accounting data from other software formats into NextGen formats. I wrote programs to generate various regulatory reports from customer databases. I programmed extensively in Excel using both macros and VBA, as well DotNet Interop for Microsoft Office using C# and VB.Net. I travelled to client sites to observe workflow, determine requirements, and demonstrate solutions.
",
2003-09-01,2004-11-30,M,M,,taxslayer.com,taxslayer.com (as Rhodes Financial Services),Senior Developer,http://taxslayer.com,"3003 TaxSlayer Drive, Evans, GA 30809",+1-706-868-2333,"TaxSlayer LLC is a multi-faceted family of corporations that sells several tax and financial products, in addition to being a retail tax preparer and operator of the popular online tax filing website, taxslayer.com. My listed employer at the time was Rhodes Financial Services Corp which reincorporated their tax software related subsidiaries in 2008 with names based on the TaxSlayer brand. ",,Online Filing Website,Design and develop parts of the www.taxslayer.com website. Design and develop web and email interfaces and high-reliability workflows around interactions with the customer and with the IRS. Provide phone support to customers during tax season.,"VB.Net, SQL, C#, XML","ASP.Net, SQL Server, MSMQ, Microsoft Exchange",Perforce,,,"Developed online tax filing software in VB.Net, C# and SQL and using MSMQ.","I worked primarily on parts of www.taxslayer.com, the company’s online filing website using VB.NET, ASP.NET and SQL Server. I wrote code to dynamically generate the web forms required for each state from metadata about each state’s tax forms. Dynamically generated controls that maintain ViewState, that respond to client side and post back events, that persist data according to schema and metadata, and that validate data both client side and server side required an in depth knowledge of the ASPX page lifecycle and post back data. 
I wrote auxiliary processes and services in C# using MSMQ, XML, and Exchange. 
I provided phone support to customers during tax season. In addition to researching software glitches and answering questions about operating the software, I learned the answers to more common tax questions on the job and had access to tax experts for more serious questions.
",
1999-03-01,2003-09-01,M,M,,Ipswitch,Ipswitch,Principal Software Developer,http://ipswitch.com,"83 Hartwell Ave, Lexington, MA 02421 (US HQ)",+1-781-676-5700,Ipswitch makes and sells retail Internet software including file transfer software and network monitoring software.,,"WS_FTP Development Team, Augusta GA Office.",Design and develop features and versions of WS_FTP and related software. Participate in the UI design and architecture of other products.,C++,"FTP, TCP/IP, SSH, TLS/SSL, PKI, COM, ATL, Windows",Visual Source Safe,,,Developed versions of WS_FTP and other retail Internet software in C++.,"I worked on several versions of WS_FTP, the most sold FTP client in the world.  In particular, I was responsible for and developed the FTP engine for version 7, which has remained mostly in place to date.  WS_FTP included extensive work in sockets, TCP/IP, FTP, Windows, and C++.  ","<p class=""highlights"">Highlights:</p>
<ul>
  <li>My goal for version 7 was to make my FTP engine the fastest in the world I achieved that goal against all known products available for comparison.</li>
  <li>To implement a rich modern FTP client, I had to understand and implement many Internet RFCs, and overcome many challenges endemic to the protocol in a modern environment, such as firewalls, encryption, NAT, non-routable addresses, and Port and Passive callbacks. </li>
  <li>I delved deeply into the Windows SDK, GDI; GUI; shell integration; resource management; internationalization; threading; thunking; algorithms; memory usage; performance; persistence; COM; ATL; SSL; SSH; PKI; digital signatures; key exchange; encryption, and secure sessions.</li>
  <li>I helped to maintain and administer test environments of FTP and SSH servers on Windows and Linux.</li>
  <li>As a principal developer, I travelled to and participated in company design and architecture meetings, as well as product feature and strategy meetings.</li>
</ul>"
1997-01-01,1999-02-28,M,M,,Asymetrix,Asymetrix,Contract Programmer,http://www.asymetrix.com,,,"Asymetrix specialized in eLearning and produced ToolBook, a scriptable authoring platform with hypermedia and multimedia capabilities, reminiscent of HyperCard. Asymetrix also provided consulting services, using ToolBook to produce training materials for customers.
Asymetrix renamed itself to click2learn.com in Oct 1999. That entity was effectively merged into SumTotal Systems (www.sumtotalsystems.com), a subsidiary of SkillSoft (www.skillsoft.com). SumTotal still supports ToolBook at tb.sumtotalsystems.com.",,"Graham Wright Interactive (GWI) until acquisition by Asymetrix in Jan 1998. 
Online eLearning division, Southeast USA Region.","Develop computer based (CBT) and web based (WBT) training and testing applications, primarily using Asymetrix ToolBook, OpenScript, and supporting technologies. Travel to meet with clients and development partners.","OpenScript, C++, C, Java, JavaScript","ToolBook, Active-X/OLE, Internet Explorer, NSAPI, Netscape, ATL/COM, Windows",CVS,,,"Implemented online eLearning solutions for enterprises in ToolBook OpenScript, C++, etc.","Working with information architects and artists, I developed several training applications and websites using ToolBook, HTML, JavaScript, C/C++, Active-X, and Java.  I coded projects for American Airlines, Union Camp, ADP, Bank of America, Fidelity Investments, Los Alamos National Labs (LANL), and others. Development contracts were under strict time and budget constraints. I travelled to and participated in design and strategy meetings.","<p class=""highlights"">Highlights:</p>
<ul>
  <li>I created an Active-X control and a corresponding Netscape plugin that simulated a Sabre® terminal in the web page. It emulated all the usually mapped keys of the terminal along with on-screen status indicators. It allowed the ticket agent the same control of the cursor and tabbing between fields, and allowed interaction with fields other than the correct intended field for the question. It simulated server round-trip updates for both correct and incorrect answers. I also created a version of the plugin as a Java applet.</li>
  <li>I created an Active-X control and a corresponding Netscape plugin that simulated an airline ticket. The plugin displayed a picture of a ticket, with configurable data in the fields. The user could navigate between and choose fields, and edit the contents of fields.</li>
  <li>I created pixel-perfect sample quizzes for Microsoft Word and Excel using ToolBook The test requested the candidate to accomplish a task using menus and shortcut keys. The tester wanted the candidate to have access to the full menu and all shortcut keys so they would not be prompted to the correct answers by limited choices. I took screenshots of all the menus and submenus in Word and Excel, and simulated the menu system in ToolBook complete with mouse tracking, highlighting, sub-menu popups and keyboard accelerators. I wrote most of the painting code in a C DLL which I called from ToolBook scripts. I was also able to simulate limited functionality of some other features such as cut and paste (of specific text - not arbitrary text) but including full emulation of modifier keys for copy vs move with caret and cursor indication.</li>
</ul>"
1996-01-01,1996-11-30,M,M,,Delta,"Delta Airlines (as Transquest, Inc)",Senior Contract Programmer/Team Lead,http://delta.com,"1030 Delta Blvd, Dept 982, Atlanta, GA, 30354",,"Transquest began as a joint venture between Delta Airlines and AT&T in 1995, then became a wholly owned subsidiary of Delta Airlines in July 1996, before being renamed to Delta Technology in 1997, and finally being repurchased by Delta Airlines in 2009.",,Software Development Team for Magellan™ Reservations System,Design and develop parts of a new Windows based front end to Delta’s reservations system - working name “Reservations of the Future” (ROF). Mentor and guide Delta employees including some that had been retrained in software development. ,"C++, SQL",Borland’s Object Windows Library (OWL). ,Visual Source Safe,,,Developed airline reservations system software in C++.,"I was a team lead on parts of Magellan™, a new Windows based front end to Delta’s reservations system, written in C++ and SQL, and communicating via TPF.
",
1994-05-01,1995-12-31,M,M,,The Fed,The Federal Reserve Bank - Atlanta (FRB),Contract Programmer,https://frbatlanta.org,"1000 Peachtree St NE, Atlanta, GA  30309 (since 2001)",+1-404-498-8500,The Federal Reserve Bank (FRB/The Fed) is an instrumentality of the United States Federal Government that oversees the economy and banking system. ,,IPAPS (Integrated Purchasing and Accounts Payable System),"Design and develop new applications and features. Enhance and improve existing applications. Gather requirements and train users. Develop reusable, low level, Windows UI elements (controls). ","C++, SQL, C","MFC, Sybase, SQL Server, Windows",Visual Source Safe,,,Developed internal accounting and management software in C++ and SQL.,"I engaged in a wide range of activities including user requirements gathering, design, user training, code maintenance, and new development in C++ and SQL. My primary project was on a large integrated accounting suite. In particular I was the key developer on the Inventory Management application and I developed many of the shared DLLs used by other parts of the suite. I received several internal commendations for excellent work.","<p class=""highlights"">Highlights:</p>
<ul>
  <li>I designed and implemented an efficient program to solve a challenging accounting problem that equitably allocated funds orthogonally and hierarchically between various departments, accounts, and projects without losing or gaining pennies. I was able to do this rapidly and correctly despite previous failed attempts by others because of my strong understanding of data structures and algorithms.</li>
  <li>I developed a check-printing program that communicated with a secure magnetic ink (MICR) printer via its secure protocol. The program converted and spelled out the dollar amount in words on the check.</li>
  <li>I developed a code strategy for generating dynamic SQL in situations where the equivalent stored procedures contained too many code paths to be maintainable.</li>
  <li>I developed a query technique to load and display large result sets achieving apparent sub-second latency for queries that had often taken more than a minute.</li>
  <li>I developed custom data controls for viewing and quickly scrolling through large result sets. My controls were noticeably much more responsive and efficient than the Windows 3.1 controls available at the time. Using simple animation principles, I based the number of fields in dynamic queries based on how fast the scroll position was changing.</li>
  <li>I created several custom controls and Window classes that emulated the Windows 95 look and feel in the Windows 3.1 environment, including, buttons, checkboxes, property pages, scrollbars and sliders This required implementing several features at the Windows SDK level in C, including window message loops, tabs, arrow keys, accelerator key, navigating between sibling, parent and child windows, mouse handling and capture, hit tests, client area and child window management, and of course painting.</li>
</ul>"
1993-09-01,1994-05-01,M,M,,Nova,Nova Information Systems (now Elavon),Contract Programmer,http://elavon.com,"Two Concourse Parkway, Suite 800, Atlanta, GA 30328",+1-678-731-5000,"NOVA Information Systems (NOVA), a wholly-owned subsidiary of U.S. Bancorp (NYSE: USB) became Elavon in April 2008. The company is one of the nations larger credit card processors.",,Software R&D,"Parse, analyze, and store (ETL) credit card transaction data from various bank formats. Design and develop client-server applications for customer-service inquiries from merchants, and to detect merchant fraud. Negotiate design requirements and features with users and management.","C++, VB, C","Windows, Paradox Engine",,,,"Developed ETL and analysis software for credit card transaction data in VB, C, and C++.","I designed and developed client-server applications for customer-service inquiries, and to detect merchant fraud. I was able to meet the very challenging expectation of having the parsed information loaded, indexed and ready for customer service inquiry within an hour of receiving a bulk data file. This would have been impossible without using non-traditional, low-level wizardry. I had regular meetings with customer service and fraud monitoring agents to negotiate requirements and features.  I was able to use VB to rapidly generate the user interfaces, while I used C/C++ to access the forms and perform the business and data model logic.","<p class=""highlights"">Highlights:</p>
<ul>
  <li>I generated custom formatted reports in C++ using the GDI directly. My reports supported typical modern formatting features such as font styles, pagination, repeated headers, column alignments, row grouping etc.</li>
  <ul>
    <li>Such reporting functionality is now typically implemented using controls or libraries such as SSRS or Crystal Reports which I have used in subsequent jobs.</li>
  </ul>
  <li>I used efficient data structures and algorithms to analyze large volumes of transaction data to find suspicious events using criteria designed by the fraud monitoring team.</li>
  <ul>
    <li>My data analysis identified which criteria were most effective, and discovered new parameters for monitoring.</li>
    <li>I was able to provide this feedback to the fraud team, and incorporate changes as necessary.</li>
  </ul>
</ul>"
1992-07-01,1993-08-01,M,M,,HVL,Hypermedia and Visualization Laboratory (HVL),Multimedia Technologist,http://hvl.cs.gsu.edu/hvl/ ,"Georgia State University, Atlanta, GA  30303",+1-404-651-2245,"In addition to its contributions to the NSF educational repositories on computer graphics, and to the proceedings of ACM SIGGRAPH, The Hypermedia and Visualization Laboratory (HVL) at Georgia State University created educational and informational hypermedia solutions for external clients.",,"Georgia State University, Department of Mathematics and Computer Science.","Develop Computer Based Training and kiosk systems for government and military clients. Install, evaluate, and maintain multimedia hardware and software in the lab. Create and perform demos, and mentor students.","C, shell scripts, application scripting languages","AIX, Irix, Windows, Macintosh, Renderman, Autodesk; Multiple pre-web hypermedia authoring applications with hypertext/hyperlink and HyperCard like capabilities.",,,,"Developed Computer Based Training and kiosk systems, maintained multimedia technology in the lab.","On projects for external clients, my responsibilities included coding, video and audio capture and conversion, and weaving together media, text and hyperlinks into the instructional narrative. I operated and maintained the lab hardware and software. I purchased, installed and tested new technology including sound and video capture cards, video recording devices, video authoring software, multimedia authoring software, input devices, memory and hard drives. We were an early adopter of Intel Indeo and used their hardware and encoders in our projects. I mentored students and provided project and technology demos to clients and visitors. I completed several other small programming projects for clients and for internal use of the HVL. I wrote several utilities to create and operate on bitmapped file formats.","<p class=""highlights"">Highlights:</p>
<ul>
  <li>I was a principal software developer on a 2-screen multimedia kiosk for the Army Research Lab DoD Supercomputing Resource Center which allowed the user to navigate a map of the premises on a computer monitor with a joystick, while viewing a synchronized video walkthrough of the route on an attached video monitor.</li>
  <li>I was a principal software developer on a hypermedia training system for the City of Atlanta’s water treatment plant. The HVL published a paper about this project here:</li>
</ul>
<p><span><a href=""http://www.sciencedirect.com/science/article/pii/009784939390072H"">http://www.sciencedirect.com/science/article/pii/009784939390072H</a></span></p>
<ul>
  <li>I wrote an application to control a single-frame video recorder to record ray-traced animations that were too detailed to be rendered in real time.</li>
  <li>I wrote a program to create a video animation from experimental data in a paper published by a department professor about using fractals to visualize convergent series. The professor presented the paper and the video at ACM SIGGRAPH ’92 in Anaheim which I also attended courtesy of the math department. I was publicly credited for animating the visualization. The paper is available here:</li>
</ul>
<p><span><a href=""http://dl.acm.org/citation.cfm?id=100451&amp;CFID=843706001&amp;CFTOKEN=51286743"">http://dl.acm.org/citation.cfm?id=100451&amp;CFID=843706001&amp;CFTOKEN=51286743</a></span></p>
<ul>
  <li>I wrote an experimental HyperMedia viewer that navigated between scenes very quickly relative to current technology by saving and reusing the unpacked raster data stored in the device dependent bitmap (DDB) structure that Windows creates when it unpacks a bitmap file.</li>
</ul>"
1989-07-01,1992-08-30,M,M,,The GAP,The Georgia Assessment Project (The GAP) ,Solution Generalist/Student Assistant,,"Georgia State University, Atlanta, GA  30303",+1-404-651-2245,"The Georgia Assessment Project was a test development organization affiliated with Georgia State University, the Georgia Department of Education, and ETS.",,Georgia State University Department of Education; Georgia Department of Education.,"Use technology to support the workflow of producing standardized tests for the state of Georgia. Perform document production, desktop publishing, network administration. Create software for statistical analysis, network and file system maintenance, file conversions, and workflow automation.","Pascal, C, C++, Xerox OpenScript, DOS Batch files, A little Ada, application macros such as WordPerfect, Lotus 123 and Borland Quattro.","Xerox 8010 (Xerox Star), XNS, Novell, Windows, Paradox.",,,,Produced standardized tests for the state of Georgia.,"As a solution generalist, I used many platforms, applications and languages, but of note, I started on a Xerox 8010 (the original Xerox Star) forerunner to GUI systems such as Macintosh and Windows. 1989 - 1992 was a dynamic period and the work environment evolved through many changes in computing platforms, languages, and network technologies. In a document production role, I used publishing software to enter and format standardized tests including Teacher Certification Tests (TCT), Curriculum Based Assessment, and other tests for the State of Georgia. 
I was assistant Network Administrator for our Novell Network, and for a time the acting Network Administrator.
I programmed in Pascal, C, C++, Paradox, batch files and application languages such as WordPerfect to support the test development, statistical, and administrative workflows.",